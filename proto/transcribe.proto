syntax = "proto3";

package transcribe;

service TranscribeService {
  rpc Transcribe (RecognizeRequest) returns (RecognizeResponse) {}
}

message RecognizeResponse {
  repeated Phrase phrases = 1;          // Отдельные фразы в тексте
  string text = 2;                      // Весь распознанный текст
}

message Phrase {
  string text = 1;                      // Фраза целиком
  repeated Word words = 2;              // Список отдельных слов внутри фразы
}

message Word {
  string word = 1;
  int64 start_ms = 2;
  int64 end_ms = 3;
}

message RecognizeRequest {
  AudioConfig config = 1;
  bytes content = 3;                    // Аудио в виде массива байт
}

message AudioConfig {
  uint32 sample_rate = 1;               // Частота дискретизации (Гц)
  uint32 max_alternatives = 2;          // Максимальное количество альтернатив
  bool split_into_phrases = 3;          // Включение/отключение разбивки на фразы
  AudioType audio_type = 4;             // Формат аудиофайла
}

enum AudioType {
  UNSPECIFIED = 0;
  WAV_PCM_S16LE = 1;
  RAW_PCM_S16LE = 2;
  RAW_PCM_S16BE = 3;
}
